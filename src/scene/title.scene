<scene name="title">
    <scenario>
        <show mode="bg" src="./src/resource/background/title_bg3.png" />
        <choice prompt="どちらで判定しますか？">
            <item label="判定を開始する（カメラ撮影）">

            </item>
            <item label="判定を開始する（画像から）">
                <call method="getPicture()" />
                <text>画像を選んでください</text>
                <show mode="bg" src="./src/resource/background/title_bg4.png" />
                <text time="1000">測定中.</text>
                <text time="1000">測定中..</text>
                <text time="1000">測定中...</text>
                <show mode="bg" src="./src/resource/background/title_bg5.png" />
                <call method="clearText()" />
                <call method="showResult()" />
            </item>
        </choice>
        <choice>
            <item label="もう一度判定する">
                <call method="clear()" />
                <jump index="0" />
            </item>
        </choice>
    </scenario>
    <script>
        import { ImageObject } from 'webtalekit/src/resource/ImageObject.js';
        let api = null;
        export const sceneConfig = {
            name: 'title',
            background: './src/resource/background/title_bg.png',
            bgm: './src/resource/bgm/ichi.mp3',
            template: './src/screen/title.html'
        }

        export let result = {
            score: 0,
            message: '',
            advice: ''
        }

        export function clearText() {
            // テキストクリア処理
            api.drawer.clearText();
        }

        export function clear() {
            // 画像クリア処理
            document.querySelector(".facePicture").setAttribute("src", "./src/resource/background/300x200.png");
            document.querySelector('progress').setAttribute("value", 0);
            document.querySelector('.scoreText').innerHTML = `シャリ度：${0}`;
        }

        // 診断メッセージデータ
        export const shariMessages = {
            perfect: [
                "完璧なシャリ顔！寿司職人からのスカウトに注意です！",
                "あなたを見ると酢飯が炊きたくなります！",
                "これぞ正真正銘のシャリ男！",
                "シャリ界の次世代エース誕生！"
            ],
            high: [
                "かなりのシャリ度！あとちょっとで極上です",
                "シャリっとした雰囲気、素晴らしい！",
                "このシャリ感、惚れ惚れします！",
                "シャリ修行の成果が出ています！"
            ],
            medium: [
                "まずまずのシャリ具合。精進あるのみ！",
                "シャリとしては及第点です",
                "シャリの道も一歩一歩",
                "シャリ修行の途中かな？"
            ],
            low: [
                "シャリ度が物足らない...精米しましょう",
                "もっと白くなれる可能性を秘めています",
                "シャリの道はまだまだ長いです",
                "シャリ修行が必要かもしれません..."
            ],
            critical: [
                "あなた...もしかして玄米派？",
                "シャリの概念がありません",
                "酢飯を見直すところから始めましょう",
                "シャリ度緊急事態発生！"
            ]
        }

        const advices = [
            "白米をもっと食べましょう",
            "寿司屋で修行を積むことをおすすめします",
            "日光に当たりすぎると玄米化するので注意",
            "シャリ度を上げるには握り寿司を週3回",
            "酢飯マイスターの称号まであと一歩！"
        ];

        // シーン初期化処理
        export function init(instance) {
            // WebTaleKitのインスタンスを取得
            api = instance;
            console.log('title scene init %o', api);
        }

        export function showResult() {
            // 結果表示処理
            result = judge();
            document.querySelector('progress').setAttribute("value", result.score);
            document.querySelector('.scoreText').innerHTML = `シャリ度：${result.score}`;
            api.drawer.drawText(['判定結果'], 25, document.querySelector('.title'));
            api.drawer.drawText([result.message], 25, document.querySelector('.resultMessage'));
            api.drawer.drawText(['アドバイス： ', result.advice], 25, document.querySelector('.advice'));
        }

        export function judge() {
            let messageArray = [];
            const score = Math.floor(Math.random() * 101)
            // スコアに応じてメッセージを選択
            if (score >= 90) messageArray = shariMessages.perfect
            else if (score >= 70) messageArray = shariMessages.high
            else if (score >= 50) messageArray = shariMessages.medium
            else if (score >= 30) messageArray = shariMessages.low
            else messageArray = shariMessages.critical
            result = {
                score: score,
                message: messageArray[Math.floor(Math.random() * messageArray.length)],
                advice: advices[Math.floor(Math.random() * advices.length)]
            }
            return result;
        }

        export function getPicture() {
            // 画像取得処理
            const input = document.createElement('input');
            input.type = 'file';
            input.accept = 'image/*';
            input.onchange = (event) => {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = async () => {
                        const imageData = reader.result;
                        document.querySelector('.facePicture').src = imageData;
                        // 画面イベントを発火
                        document.querySelector('#gameContainer').dispatchEvent(new PointerEvent('click', { bubbles: true }));

                    };
                    reader.readAsDataURL(file);
                }
            };
            input.click();
        }
    </script>
</scene>